// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.Sample;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class MemoryField extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static MemoryField getRootAsMemoryField(ByteBuffer _bb) { return getRootAsMemoryField(_bb, new MemoryField()); }
  public static MemoryField getRootAsMemoryField(ByteBuffer _bb, MemoryField obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public MemoryField __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String fieldName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer fieldNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer fieldNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String description() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer descriptionAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer descriptionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String content() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer contentAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer contentInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String contextWords(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int contextWordsLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public StringVector contextWordsVector() { return contextWordsVector(new StringVector()); }
  public StringVector contextWordsVector(StringVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createMemoryField(FlatBufferBuilder builder,
      int fieldNameOffset,
      int descriptionOffset,
      int contentOffset,
      int contextWordsOffset) {
    builder.startTable(4);
    MemoryField.addContextWords(builder, contextWordsOffset);
    MemoryField.addContent(builder, contentOffset);
    MemoryField.addDescription(builder, descriptionOffset);
    MemoryField.addFieldName(builder, fieldNameOffset);
    return MemoryField.endMemoryField(builder);
  }

  public static void startMemoryField(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addFieldName(FlatBufferBuilder builder, int fieldNameOffset) { builder.addOffset(0, fieldNameOffset, 0); }
  public static void addDescription(FlatBufferBuilder builder, int descriptionOffset) { builder.addOffset(1, descriptionOffset, 0); }
  public static void addContent(FlatBufferBuilder builder, int contentOffset) { builder.addOffset(2, contentOffset, 0); }
  public static void addContextWords(FlatBufferBuilder builder, int contextWordsOffset) { builder.addOffset(3, contextWordsOffset, 0); }
  public static int createContextWordsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startContextWordsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endMemoryField(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public MemoryField get(int j) { return get(new MemoryField(), j); }
    public MemoryField get(MemoryField obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

