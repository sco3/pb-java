// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.Sample;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ConversationTranscript extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static ConversationTranscript getRootAsConversationTranscript(ByteBuffer _bb) { return getRootAsConversationTranscript(_bb, new ConversationTranscript()); }
  public static ConversationTranscript getRootAsConversationTranscript(ByteBuffer _bb, ConversationTranscript obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ConversationTranscript __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public MyGame.Sample.ConversationItem conversation(int j) { return conversation(new MyGame.Sample.ConversationItem(), j); }
  public MyGame.Sample.ConversationItem conversation(MyGame.Sample.ConversationItem obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int conversationLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public MyGame.Sample.ConversationItem.Vector conversationVector() { return conversationVector(new MyGame.Sample.ConversationItem.Vector()); }
  public MyGame.Sample.ConversationItem.Vector conversationVector(MyGame.Sample.ConversationItem.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createConversationTranscript(FlatBufferBuilder builder,
      int idOffset,
      int conversationOffset) {
    builder.startTable(2);
    ConversationTranscript.addConversation(builder, conversationOffset);
    ConversationTranscript.addId(builder, idOffset);
    return ConversationTranscript.endConversationTranscript(builder);
  }

  public static void startConversationTranscript(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addConversation(FlatBufferBuilder builder, int conversationOffset) { builder.addOffset(1, conversationOffset, 0); }
  public static int createConversationVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startConversationVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endConversationTranscript(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ConversationTranscript get(int j) { return get(new ConversationTranscript(), j); }
    public ConversationTranscript get(ConversationTranscript obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

