// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.Sample;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class UserModel extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static UserModel getRootAsUserModel(ByteBuffer _bb) { return getRootAsUserModel(_bb, new UserModel()); }
  public static UserModel getRootAsUserModel(ByteBuffer _bb, UserModel obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public UserModel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String currentUserPhase() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer currentUserPhaseAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer currentUserPhaseInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public MyGame.Sample.ChecklistItem currentUserChecklist(int j) { return currentUserChecklist(new MyGame.Sample.ChecklistItem(), j); }
  public MyGame.Sample.ChecklistItem currentUserChecklist(MyGame.Sample.ChecklistItem obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int currentUserChecklistLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public MyGame.Sample.ChecklistItem.Vector currentUserChecklistVector() { return currentUserChecklistVector(new MyGame.Sample.ChecklistItem.Vector()); }
  public MyGame.Sample.ChecklistItem.Vector currentUserChecklistVector(MyGame.Sample.ChecklistItem.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String lastSessionSummary() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer lastSessionSummaryAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer lastSessionSummaryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String clientProfileAssessment() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer clientProfileAssessmentAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer clientProfileAssessmentInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public String nextSessionGoals() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nextSessionGoalsAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer nextSessionGoalsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public long lastObserverAccessTimestamp() { int o = __offset(14); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String lastRemovedChecklistItems(int j) { int o = __offset(16); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int lastRemovedChecklistItemsLength() { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; }
  public StringVector lastRemovedChecklistItemsVector() { return lastRemovedChecklistItemsVector(new StringVector()); }
  public StringVector lastRemovedChecklistItemsVector(StringVector obj) { int o = __offset(16); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public boolean goalReviewCheck() { int o = __offset(18); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public MyGame.Sample.MemoryModel memories() { return memories(new MyGame.Sample.MemoryModel()); }
  public MyGame.Sample.MemoryModel memories(MyGame.Sample.MemoryModel obj) { int o = __offset(20); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public MyGame.Sample.ConversationTranscript conversationTranscript() { return conversationTranscript(new MyGame.Sample.ConversationTranscript()); }
  public MyGame.Sample.ConversationTranscript conversationTranscript(MyGame.Sample.ConversationTranscript obj) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public MyGame.Sample.SentimentAnalysis sentimentAnalysis() { return sentimentAnalysis(new MyGame.Sample.SentimentAnalysis()); }
  public MyGame.Sample.SentimentAnalysis sentimentAnalysis(MyGame.Sample.SentimentAnalysis obj) { int o = __offset(24); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createUserModel(FlatBufferBuilder builder,
      int currentUserPhaseOffset,
      int currentUserChecklistOffset,
      int lastSessionSummaryOffset,
      int clientProfileAssessmentOffset,
      int nextSessionGoalsOffset,
      long lastObserverAccessTimestamp,
      int lastRemovedChecklistItemsOffset,
      boolean goalReviewCheck,
      int memoriesOffset,
      int conversationTranscriptOffset,
      int sentimentAnalysisOffset) {
    builder.startTable(11);
    UserModel.addLastObserverAccessTimestamp(builder, lastObserverAccessTimestamp);
    UserModel.addSentimentAnalysis(builder, sentimentAnalysisOffset);
    UserModel.addConversationTranscript(builder, conversationTranscriptOffset);
    UserModel.addMemories(builder, memoriesOffset);
    UserModel.addLastRemovedChecklistItems(builder, lastRemovedChecklistItemsOffset);
    UserModel.addNextSessionGoals(builder, nextSessionGoalsOffset);
    UserModel.addClientProfileAssessment(builder, clientProfileAssessmentOffset);
    UserModel.addLastSessionSummary(builder, lastSessionSummaryOffset);
    UserModel.addCurrentUserChecklist(builder, currentUserChecklistOffset);
    UserModel.addCurrentUserPhase(builder, currentUserPhaseOffset);
    UserModel.addGoalReviewCheck(builder, goalReviewCheck);
    return UserModel.endUserModel(builder);
  }

  public static void startUserModel(FlatBufferBuilder builder) { builder.startTable(11); }
  public static void addCurrentUserPhase(FlatBufferBuilder builder, int currentUserPhaseOffset) { builder.addOffset(0, currentUserPhaseOffset, 0); }
  public static void addCurrentUserChecklist(FlatBufferBuilder builder, int currentUserChecklistOffset) { builder.addOffset(1, currentUserChecklistOffset, 0); }
  public static int createCurrentUserChecklistVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startCurrentUserChecklistVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addLastSessionSummary(FlatBufferBuilder builder, int lastSessionSummaryOffset) { builder.addOffset(2, lastSessionSummaryOffset, 0); }
  public static void addClientProfileAssessment(FlatBufferBuilder builder, int clientProfileAssessmentOffset) { builder.addOffset(3, clientProfileAssessmentOffset, 0); }
  public static void addNextSessionGoals(FlatBufferBuilder builder, int nextSessionGoalsOffset) { builder.addOffset(4, nextSessionGoalsOffset, 0); }
  public static void addLastObserverAccessTimestamp(FlatBufferBuilder builder, long lastObserverAccessTimestamp) { builder.addLong(5, lastObserverAccessTimestamp, 0L); }
  public static void addLastRemovedChecklistItems(FlatBufferBuilder builder, int lastRemovedChecklistItemsOffset) { builder.addOffset(6, lastRemovedChecklistItemsOffset, 0); }
  public static int createLastRemovedChecklistItemsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startLastRemovedChecklistItemsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addGoalReviewCheck(FlatBufferBuilder builder, boolean goalReviewCheck) { builder.addBoolean(7, goalReviewCheck, false); }
  public static void addMemories(FlatBufferBuilder builder, int memoriesOffset) { builder.addOffset(8, memoriesOffset, 0); }
  public static void addConversationTranscript(FlatBufferBuilder builder, int conversationTranscriptOffset) { builder.addOffset(9, conversationTranscriptOffset, 0); }
  public static void addSentimentAnalysis(FlatBufferBuilder builder, int sentimentAnalysisOffset) { builder.addOffset(10, sentimentAnalysisOffset, 0); }
  public static int endUserModel(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public UserModel get(int j) { return get(new UserModel(), j); }
    public UserModel get(UserModel obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

