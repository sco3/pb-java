// source: api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.conversationstream.protobuf.ChecklistItem', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.ComponentType', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.ConversationItem', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.ConversationStreamMessage', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.ConversationTranscript', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.GoalItem', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.MemoryField', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.MemoryModel', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.PhaseConnection', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.PhaseInformation', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.PhaseNode', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.SentimentAnalysis', null, global);
goog.exportSymbol('proto.conversationstream.protobuf.UserModel', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.SentimentAnalysis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conversationstream.protobuf.SentimentAnalysis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.SentimentAnalysis.displayName = 'proto.conversationstream.protobuf.SentimentAnalysis';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.ConversationItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conversationstream.protobuf.ConversationItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.ConversationItem.displayName = 'proto.conversationstream.protobuf.ConversationItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.ConversationTranscript = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conversationstream.protobuf.ConversationTranscript.repeatedFields_, null);
};
goog.inherits(proto.conversationstream.protobuf.ConversationTranscript, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.ConversationTranscript.displayName = 'proto.conversationstream.protobuf.ConversationTranscript';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.ChecklistItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conversationstream.protobuf.ChecklistItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.ChecklistItem.displayName = 'proto.conversationstream.protobuf.ChecklistItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.GoalItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conversationstream.protobuf.GoalItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.GoalItem.displayName = 'proto.conversationstream.protobuf.GoalItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.PhaseNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conversationstream.protobuf.PhaseNode.repeatedFields_, null);
};
goog.inherits(proto.conversationstream.protobuf.PhaseNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.PhaseNode.displayName = 'proto.conversationstream.protobuf.PhaseNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.PhaseConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conversationstream.protobuf.PhaseConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.PhaseConnection.displayName = 'proto.conversationstream.protobuf.PhaseConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.PhaseInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conversationstream.protobuf.PhaseInformation.repeatedFields_, null);
};
goog.inherits(proto.conversationstream.protobuf.PhaseInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.PhaseInformation.displayName = 'proto.conversationstream.protobuf.PhaseInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.MemoryField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conversationstream.protobuf.MemoryField.repeatedFields_, null);
};
goog.inherits(proto.conversationstream.protobuf.MemoryField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.MemoryField.displayName = 'proto.conversationstream.protobuf.MemoryField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.MemoryModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conversationstream.protobuf.MemoryModel.repeatedFields_, null);
};
goog.inherits(proto.conversationstream.protobuf.MemoryModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.MemoryModel.displayName = 'proto.conversationstream.protobuf.MemoryModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.UserModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conversationstream.protobuf.UserModel.repeatedFields_, null);
};
goog.inherits(proto.conversationstream.protobuf.UserModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.UserModel.displayName = 'proto.conversationstream.protobuf.UserModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conversationstream.protobuf.ConversationStreamMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.conversationstream.protobuf.ConversationStreamMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conversationstream.protobuf.ConversationStreamMessage.displayName = 'proto.conversationstream.protobuf.ConversationStreamMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.SentimentAnalysis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.SentimentAnalysis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.SentimentAnalysis.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentSentiment: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    trendingSentiment: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    totalSentiment: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    messageCount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    averageSentiment: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.SentimentAnalysis}
 */
proto.conversationstream.protobuf.SentimentAnalysis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.SentimentAnalysis;
  return proto.conversationstream.protobuf.SentimentAnalysis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.SentimentAnalysis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.SentimentAnalysis}
 */
proto.conversationstream.protobuf.SentimentAnalysis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentSentiment(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTrendingSentiment(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalSentiment(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMessageCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageSentiment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.SentimentAnalysis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.SentimentAnalysis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.SentimentAnalysis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentSentiment();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getTrendingSentiment();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTotalSentiment();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getMessageCount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getAverageSentiment();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional double current_sentiment = 1;
 * @return {number}
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.getCurrentSentiment = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conversationstream.protobuf.SentimentAnalysis} returns this
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.setCurrentSentiment = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double trending_sentiment = 2;
 * @return {number}
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.getTrendingSentiment = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conversationstream.protobuf.SentimentAnalysis} returns this
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.setTrendingSentiment = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double total_sentiment = 3;
 * @return {number}
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.getTotalSentiment = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conversationstream.protobuf.SentimentAnalysis} returns this
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.setTotalSentiment = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double message_count = 4;
 * @return {number}
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.getMessageCount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conversationstream.protobuf.SentimentAnalysis} returns this
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.setMessageCount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double average_sentiment = 5;
 * @return {number}
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.getAverageSentiment = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.conversationstream.protobuf.SentimentAnalysis} returns this
 */
proto.conversationstream.protobuf.SentimentAnalysis.prototype.setAverageSentiment = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.ConversationItem.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.ConversationItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.ConversationItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.ConversationItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.ConversationItem}
 */
proto.conversationstream.protobuf.ConversationItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.ConversationItem;
  return proto.conversationstream.protobuf.ConversationItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.ConversationItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.ConversationItem}
 */
proto.conversationstream.protobuf.ConversationItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.ConversationItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.ConversationItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.ConversationItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.ConversationItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string role = 1;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationItem.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationItem} returns this
 */
proto.conversationstream.protobuf.ConversationItem.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationItem.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationItem} returns this
 */
proto.conversationstream.protobuf.ConversationItem.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conversationstream.protobuf.ConversationTranscript.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.ConversationTranscript.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.ConversationTranscript.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.ConversationTranscript} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.ConversationTranscript.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    conversationList: jspb.Message.toObjectList(msg.getConversationList(),
    proto.conversationstream.protobuf.ConversationItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.ConversationTranscript}
 */
proto.conversationstream.protobuf.ConversationTranscript.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.ConversationTranscript;
  return proto.conversationstream.protobuf.ConversationTranscript.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.ConversationTranscript} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.ConversationTranscript}
 */
proto.conversationstream.protobuf.ConversationTranscript.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.conversationstream.protobuf.ConversationItem;
      reader.readMessage(value,proto.conversationstream.protobuf.ConversationItem.deserializeBinaryFromReader);
      msg.addConversation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.ConversationTranscript.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.ConversationTranscript.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.ConversationTranscript} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.ConversationTranscript.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConversationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.conversationstream.protobuf.ConversationItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationTranscript.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationTranscript} returns this
 */
proto.conversationstream.protobuf.ConversationTranscript.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ConversationItem conversation = 2;
 * @return {!Array<!proto.conversationstream.protobuf.ConversationItem>}
 */
proto.conversationstream.protobuf.ConversationTranscript.prototype.getConversationList = function() {
  return /** @type{!Array<!proto.conversationstream.protobuf.ConversationItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.conversationstream.protobuf.ConversationItem, 2));
};


/**
 * @param {!Array<!proto.conversationstream.protobuf.ConversationItem>} value
 * @return {!proto.conversationstream.protobuf.ConversationTranscript} returns this
*/
proto.conversationstream.protobuf.ConversationTranscript.prototype.setConversationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.conversationstream.protobuf.ConversationItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conversationstream.protobuf.ConversationItem}
 */
proto.conversationstream.protobuf.ConversationTranscript.prototype.addConversation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.conversationstream.protobuf.ConversationItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conversationstream.protobuf.ConversationTranscript} returns this
 */
proto.conversationstream.protobuf.ConversationTranscript.prototype.clearConversationList = function() {
  return this.setConversationList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.ChecklistItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.ChecklistItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.ChecklistItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nextSessionGoal: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.ChecklistItem}
 */
proto.conversationstream.protobuf.ChecklistItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.ChecklistItem;
  return proto.conversationstream.protobuf.ChecklistItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.ChecklistItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.ChecklistItem}
 */
proto.conversationstream.protobuf.ChecklistItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextSessionGoal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.ChecklistItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.ChecklistItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.ChecklistItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNextSessionGoal();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ChecklistItem} returns this
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ChecklistItem} returns this
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ChecklistItem} returns this
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string next_session_goal = 4;
 * @return {string}
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.getNextSessionGoal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ChecklistItem} returns this
 */
proto.conversationstream.protobuf.ChecklistItem.prototype.setNextSessionGoal = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.GoalItem.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.GoalItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.GoalItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.GoalItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    goalDescription: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.GoalItem}
 */
proto.conversationstream.protobuf.GoalItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.GoalItem;
  return proto.conversationstream.protobuf.GoalItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.GoalItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.GoalItem}
 */
proto.conversationstream.protobuf.GoalItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoalDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.GoalItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.GoalItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.GoalItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.GoalItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGoalDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.conversationstream.protobuf.GoalItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.GoalItem} returns this
 */
proto.conversationstream.protobuf.GoalItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string goal_description = 2;
 * @return {string}
 */
proto.conversationstream.protobuf.GoalItem.prototype.getGoalDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.GoalItem} returns this
 */
proto.conversationstream.protobuf.GoalItem.prototype.setGoalDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conversationstream.protobuf.PhaseNode.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.PhaseNode.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.PhaseNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.PhaseNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.PhaseNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
    proto.conversationstream.protobuf.GoalItem.toObject, includeInstance),
    checklistList: jspb.Message.toObjectList(msg.getChecklistList(),
    proto.conversationstream.protobuf.ChecklistItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.PhaseNode}
 */
proto.conversationstream.protobuf.PhaseNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.PhaseNode;
  return proto.conversationstream.protobuf.PhaseNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.PhaseNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.PhaseNode}
 */
proto.conversationstream.protobuf.PhaseNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.conversationstream.protobuf.GoalItem;
      reader.readMessage(value,proto.conversationstream.protobuf.GoalItem.deserializeBinaryFromReader);
      msg.addGoals(value);
      break;
    case 4:
      var value = new proto.conversationstream.protobuf.ChecklistItem;
      reader.readMessage(value,proto.conversationstream.protobuf.ChecklistItem.deserializeBinaryFromReader);
      msg.addChecklist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.PhaseNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.PhaseNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.PhaseNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.PhaseNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.conversationstream.protobuf.GoalItem.serializeBinaryToWriter
    );
  }
  f = message.getChecklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.conversationstream.protobuf.ChecklistItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.conversationstream.protobuf.PhaseNode.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.PhaseNode} returns this
 */
proto.conversationstream.protobuf.PhaseNode.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.conversationstream.protobuf.PhaseNode.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.PhaseNode} returns this
 */
proto.conversationstream.protobuf.PhaseNode.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated GoalItem goals = 3;
 * @return {!Array<!proto.conversationstream.protobuf.GoalItem>}
 */
proto.conversationstream.protobuf.PhaseNode.prototype.getGoalsList = function() {
  return /** @type{!Array<!proto.conversationstream.protobuf.GoalItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.conversationstream.protobuf.GoalItem, 3));
};


/**
 * @param {!Array<!proto.conversationstream.protobuf.GoalItem>} value
 * @return {!proto.conversationstream.protobuf.PhaseNode} returns this
*/
proto.conversationstream.protobuf.PhaseNode.prototype.setGoalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.conversationstream.protobuf.GoalItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conversationstream.protobuf.GoalItem}
 */
proto.conversationstream.protobuf.PhaseNode.prototype.addGoals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.conversationstream.protobuf.GoalItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conversationstream.protobuf.PhaseNode} returns this
 */
proto.conversationstream.protobuf.PhaseNode.prototype.clearGoalsList = function() {
  return this.setGoalsList([]);
};


/**
 * repeated ChecklistItem checklist = 4;
 * @return {!Array<!proto.conversationstream.protobuf.ChecklistItem>}
 */
proto.conversationstream.protobuf.PhaseNode.prototype.getChecklistList = function() {
  return /** @type{!Array<!proto.conversationstream.protobuf.ChecklistItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.conversationstream.protobuf.ChecklistItem, 4));
};


/**
 * @param {!Array<!proto.conversationstream.protobuf.ChecklistItem>} value
 * @return {!proto.conversationstream.protobuf.PhaseNode} returns this
*/
proto.conversationstream.protobuf.PhaseNode.prototype.setChecklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.conversationstream.protobuf.ChecklistItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conversationstream.protobuf.ChecklistItem}
 */
proto.conversationstream.protobuf.PhaseNode.prototype.addChecklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.conversationstream.protobuf.ChecklistItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conversationstream.protobuf.PhaseNode} returns this
 */
proto.conversationstream.protobuf.PhaseNode.prototype.clearChecklistList = function() {
  return this.setChecklistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.PhaseConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.PhaseConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.PhaseConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.PhaseConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    prevPhaseId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nextPhaseId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.PhaseConnection}
 */
proto.conversationstream.protobuf.PhaseConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.PhaseConnection;
  return proto.conversationstream.protobuf.PhaseConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.PhaseConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.PhaseConnection}
 */
proto.conversationstream.protobuf.PhaseConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrevPhaseId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPhaseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.PhaseConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.PhaseConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.PhaseConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.PhaseConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrevPhaseId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNextPhaseId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string connection_id = 1;
 * @return {string}
 */
proto.conversationstream.protobuf.PhaseConnection.prototype.getConnectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.PhaseConnection} returns this
 */
proto.conversationstream.protobuf.PhaseConnection.prototype.setConnectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string prev_phase_id = 2;
 * @return {string}
 */
proto.conversationstream.protobuf.PhaseConnection.prototype.getPrevPhaseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.PhaseConnection} returns this
 */
proto.conversationstream.protobuf.PhaseConnection.prototype.setPrevPhaseId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string next_phase_id = 3;
 * @return {string}
 */
proto.conversationstream.protobuf.PhaseConnection.prototype.getNextPhaseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.PhaseConnection} returns this
 */
proto.conversationstream.protobuf.PhaseConnection.prototype.setNextPhaseId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conversationstream.protobuf.PhaseInformation.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.PhaseInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.PhaseInformation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.PhaseInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    startPhaseId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phaseNodesList: jspb.Message.toObjectList(msg.getPhaseNodesList(),
    proto.conversationstream.protobuf.PhaseNode.toObject, includeInstance),
    phaseConnectionsList: jspb.Message.toObjectList(msg.getPhaseConnectionsList(),
    proto.conversationstream.protobuf.PhaseConnection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.PhaseInformation}
 */
proto.conversationstream.protobuf.PhaseInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.PhaseInformation;
  return proto.conversationstream.protobuf.PhaseInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.PhaseInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.PhaseInformation}
 */
proto.conversationstream.protobuf.PhaseInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartPhaseId(value);
      break;
    case 2:
      var value = new proto.conversationstream.protobuf.PhaseNode;
      reader.readMessage(value,proto.conversationstream.protobuf.PhaseNode.deserializeBinaryFromReader);
      msg.addPhaseNodes(value);
      break;
    case 3:
      var value = new proto.conversationstream.protobuf.PhaseConnection;
      reader.readMessage(value,proto.conversationstream.protobuf.PhaseConnection.deserializeBinaryFromReader);
      msg.addPhaseConnections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.PhaseInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.PhaseInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.PhaseInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartPhaseId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPhaseNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.conversationstream.protobuf.PhaseNode.serializeBinaryToWriter
    );
  }
  f = message.getPhaseConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.conversationstream.protobuf.PhaseConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional string start_phase_id = 1;
 * @return {string}
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.getStartPhaseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.PhaseInformation} returns this
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.setStartPhaseId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PhaseNode phase_nodes = 2;
 * @return {!Array<!proto.conversationstream.protobuf.PhaseNode>}
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.getPhaseNodesList = function() {
  return /** @type{!Array<!proto.conversationstream.protobuf.PhaseNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.conversationstream.protobuf.PhaseNode, 2));
};


/**
 * @param {!Array<!proto.conversationstream.protobuf.PhaseNode>} value
 * @return {!proto.conversationstream.protobuf.PhaseInformation} returns this
*/
proto.conversationstream.protobuf.PhaseInformation.prototype.setPhaseNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.conversationstream.protobuf.PhaseNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conversationstream.protobuf.PhaseNode}
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.addPhaseNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.conversationstream.protobuf.PhaseNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conversationstream.protobuf.PhaseInformation} returns this
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.clearPhaseNodesList = function() {
  return this.setPhaseNodesList([]);
};


/**
 * repeated PhaseConnection phase_connections = 3;
 * @return {!Array<!proto.conversationstream.protobuf.PhaseConnection>}
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.getPhaseConnectionsList = function() {
  return /** @type{!Array<!proto.conversationstream.protobuf.PhaseConnection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.conversationstream.protobuf.PhaseConnection, 3));
};


/**
 * @param {!Array<!proto.conversationstream.protobuf.PhaseConnection>} value
 * @return {!proto.conversationstream.protobuf.PhaseInformation} returns this
*/
proto.conversationstream.protobuf.PhaseInformation.prototype.setPhaseConnectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.conversationstream.protobuf.PhaseConnection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conversationstream.protobuf.PhaseConnection}
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.addPhaseConnections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.conversationstream.protobuf.PhaseConnection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conversationstream.protobuf.PhaseInformation} returns this
 */
proto.conversationstream.protobuf.PhaseInformation.prototype.clearPhaseConnectionsList = function() {
  return this.setPhaseConnectionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conversationstream.protobuf.MemoryField.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.MemoryField.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.MemoryField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.MemoryField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.MemoryField.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextWordsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.MemoryField}
 */
proto.conversationstream.protobuf.MemoryField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.MemoryField;
  return proto.conversationstream.protobuf.MemoryField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.MemoryField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.MemoryField}
 */
proto.conversationstream.protobuf.MemoryField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addContextWords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.MemoryField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.MemoryField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.MemoryField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.MemoryField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextWordsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string field_name = 1;
 * @return {string}
 */
proto.conversationstream.protobuf.MemoryField.prototype.getFieldName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.MemoryField} returns this
 */
proto.conversationstream.protobuf.MemoryField.prototype.setFieldName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.conversationstream.protobuf.MemoryField.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.MemoryField} returns this
 */
proto.conversationstream.protobuf.MemoryField.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.conversationstream.protobuf.MemoryField.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.MemoryField} returns this
 */
proto.conversationstream.protobuf.MemoryField.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string context_words = 4;
 * @return {!Array<string>}
 */
proto.conversationstream.protobuf.MemoryField.prototype.getContextWordsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.conversationstream.protobuf.MemoryField} returns this
 */
proto.conversationstream.protobuf.MemoryField.prototype.setContextWordsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.conversationstream.protobuf.MemoryField} returns this
 */
proto.conversationstream.protobuf.MemoryField.prototype.addContextWords = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conversationstream.protobuf.MemoryField} returns this
 */
proto.conversationstream.protobuf.MemoryField.prototype.clearContextWordsList = function() {
  return this.setContextWordsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conversationstream.protobuf.MemoryModel.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.MemoryModel.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.MemoryModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.MemoryModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.MemoryModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    memoryFieldsList: jspb.Message.toObjectList(msg.getMemoryFieldsList(),
    proto.conversationstream.protobuf.MemoryField.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.MemoryModel}
 */
proto.conversationstream.protobuf.MemoryModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.MemoryModel;
  return proto.conversationstream.protobuf.MemoryModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.MemoryModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.MemoryModel}
 */
proto.conversationstream.protobuf.MemoryModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.conversationstream.protobuf.MemoryField;
      reader.readMessage(value,proto.conversationstream.protobuf.MemoryField.deserializeBinaryFromReader);
      msg.addMemoryFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.MemoryModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.MemoryModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.MemoryModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.MemoryModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMemoryFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.conversationstream.protobuf.MemoryField.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MemoryField memory_fields = 1;
 * @return {!Array<!proto.conversationstream.protobuf.MemoryField>}
 */
proto.conversationstream.protobuf.MemoryModel.prototype.getMemoryFieldsList = function() {
  return /** @type{!Array<!proto.conversationstream.protobuf.MemoryField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.conversationstream.protobuf.MemoryField, 1));
};


/**
 * @param {!Array<!proto.conversationstream.protobuf.MemoryField>} value
 * @return {!proto.conversationstream.protobuf.MemoryModel} returns this
*/
proto.conversationstream.protobuf.MemoryModel.prototype.setMemoryFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.conversationstream.protobuf.MemoryField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conversationstream.protobuf.MemoryField}
 */
proto.conversationstream.protobuf.MemoryModel.prototype.addMemoryFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.conversationstream.protobuf.MemoryField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conversationstream.protobuf.MemoryModel} returns this
 */
proto.conversationstream.protobuf.MemoryModel.prototype.clearMemoryFieldsList = function() {
  return this.setMemoryFieldsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conversationstream.protobuf.UserModel.repeatedFields_ = [2,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.UserModel.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.UserModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.UserModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.UserModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentUserPhase: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currentUserChecklistList: jspb.Message.toObjectList(msg.getCurrentUserChecklistList(),
    proto.conversationstream.protobuf.ChecklistItem.toObject, includeInstance),
    lastSessionSummary: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientProfileAssessment: jspb.Message.getFieldWithDefault(msg, 4, ""),
    nextSessionGoals: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lastObserverAccessTimestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    lastRemovedChecklistItemsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    goalReviewCheck: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    memories: (f = msg.getMemories()) && proto.conversationstream.protobuf.MemoryModel.toObject(includeInstance, f),
    conversationTranscript: (f = msg.getConversationTranscript()) && proto.conversationstream.protobuf.ConversationTranscript.toObject(includeInstance, f),
    sentimentAnalysis: (f = msg.getSentimentAnalysis()) && proto.conversationstream.protobuf.SentimentAnalysis.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.UserModel}
 */
proto.conversationstream.protobuf.UserModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.UserModel;
  return proto.conversationstream.protobuf.UserModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.UserModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.UserModel}
 */
proto.conversationstream.protobuf.UserModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentUserPhase(value);
      break;
    case 2:
      var value = new proto.conversationstream.protobuf.ChecklistItem;
      reader.readMessage(value,proto.conversationstream.protobuf.ChecklistItem.deserializeBinaryFromReader);
      msg.addCurrentUserChecklist(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastSessionSummary(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientProfileAssessment(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextSessionGoals(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastObserverAccessTimestamp(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addLastRemovedChecklistItems(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGoalReviewCheck(value);
      break;
    case 9:
      var value = new proto.conversationstream.protobuf.MemoryModel;
      reader.readMessage(value,proto.conversationstream.protobuf.MemoryModel.deserializeBinaryFromReader);
      msg.setMemories(value);
      break;
    case 10:
      var value = new proto.conversationstream.protobuf.ConversationTranscript;
      reader.readMessage(value,proto.conversationstream.protobuf.ConversationTranscript.deserializeBinaryFromReader);
      msg.setConversationTranscript(value);
      break;
    case 11:
      var value = new proto.conversationstream.protobuf.SentimentAnalysis;
      reader.readMessage(value,proto.conversationstream.protobuf.SentimentAnalysis.deserializeBinaryFromReader);
      msg.setSentimentAnalysis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.UserModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.UserModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.UserModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.UserModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentUserPhase();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrentUserChecklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.conversationstream.protobuf.ChecklistItem.serializeBinaryToWriter
    );
  }
  f = message.getLastSessionSummary();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientProfileAssessment();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNextSessionGoals();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLastObserverAccessTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getLastRemovedChecklistItemsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getGoalReviewCheck();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getMemories();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.conversationstream.protobuf.MemoryModel.serializeBinaryToWriter
    );
  }
  f = message.getConversationTranscript();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.conversationstream.protobuf.ConversationTranscript.serializeBinaryToWriter
    );
  }
  f = message.getSentimentAnalysis();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.conversationstream.protobuf.SentimentAnalysis.serializeBinaryToWriter
    );
  }
};


/**
 * optional string current_user_phase = 1;
 * @return {string}
 */
proto.conversationstream.protobuf.UserModel.prototype.getCurrentUserPhase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.setCurrentUserPhase = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ChecklistItem current_user_checklist = 2;
 * @return {!Array<!proto.conversationstream.protobuf.ChecklistItem>}
 */
proto.conversationstream.protobuf.UserModel.prototype.getCurrentUserChecklistList = function() {
  return /** @type{!Array<!proto.conversationstream.protobuf.ChecklistItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.conversationstream.protobuf.ChecklistItem, 2));
};


/**
 * @param {!Array<!proto.conversationstream.protobuf.ChecklistItem>} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
*/
proto.conversationstream.protobuf.UserModel.prototype.setCurrentUserChecklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.conversationstream.protobuf.ChecklistItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conversationstream.protobuf.ChecklistItem}
 */
proto.conversationstream.protobuf.UserModel.prototype.addCurrentUserChecklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.conversationstream.protobuf.ChecklistItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.clearCurrentUserChecklistList = function() {
  return this.setCurrentUserChecklistList([]);
};


/**
 * optional string last_session_summary = 3;
 * @return {string}
 */
proto.conversationstream.protobuf.UserModel.prototype.getLastSessionSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.setLastSessionSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string client_profile_assessment = 4;
 * @return {string}
 */
proto.conversationstream.protobuf.UserModel.prototype.getClientProfileAssessment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.setClientProfileAssessment = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string next_session_goals = 5;
 * @return {string}
 */
proto.conversationstream.protobuf.UserModel.prototype.getNextSessionGoals = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.setNextSessionGoals = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 last_observer_access_timestamp = 6;
 * @return {number}
 */
proto.conversationstream.protobuf.UserModel.prototype.getLastObserverAccessTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.setLastObserverAccessTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string last_removed_checklist_items = 7;
 * @return {!Array<string>}
 */
proto.conversationstream.protobuf.UserModel.prototype.getLastRemovedChecklistItemsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.setLastRemovedChecklistItemsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.addLastRemovedChecklistItems = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.clearLastRemovedChecklistItemsList = function() {
  return this.setLastRemovedChecklistItemsList([]);
};


/**
 * optional bool goal_review_check = 8;
 * @return {boolean}
 */
proto.conversationstream.protobuf.UserModel.prototype.getGoalReviewCheck = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.setGoalReviewCheck = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional MemoryModel memories = 9;
 * @return {?proto.conversationstream.protobuf.MemoryModel}
 */
proto.conversationstream.protobuf.UserModel.prototype.getMemories = function() {
  return /** @type{?proto.conversationstream.protobuf.MemoryModel} */ (
    jspb.Message.getWrapperField(this, proto.conversationstream.protobuf.MemoryModel, 9));
};


/**
 * @param {?proto.conversationstream.protobuf.MemoryModel|undefined} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
*/
proto.conversationstream.protobuf.UserModel.prototype.setMemories = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.clearMemories = function() {
  return this.setMemories(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conversationstream.protobuf.UserModel.prototype.hasMemories = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ConversationTranscript conversation_transcript = 10;
 * @return {?proto.conversationstream.protobuf.ConversationTranscript}
 */
proto.conversationstream.protobuf.UserModel.prototype.getConversationTranscript = function() {
  return /** @type{?proto.conversationstream.protobuf.ConversationTranscript} */ (
    jspb.Message.getWrapperField(this, proto.conversationstream.protobuf.ConversationTranscript, 10));
};


/**
 * @param {?proto.conversationstream.protobuf.ConversationTranscript|undefined} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
*/
proto.conversationstream.protobuf.UserModel.prototype.setConversationTranscript = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.clearConversationTranscript = function() {
  return this.setConversationTranscript(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conversationstream.protobuf.UserModel.prototype.hasConversationTranscript = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SentimentAnalysis sentiment_analysis = 11;
 * @return {?proto.conversationstream.protobuf.SentimentAnalysis}
 */
proto.conversationstream.protobuf.UserModel.prototype.getSentimentAnalysis = function() {
  return /** @type{?proto.conversationstream.protobuf.SentimentAnalysis} */ (
    jspb.Message.getWrapperField(this, proto.conversationstream.protobuf.SentimentAnalysis, 11));
};


/**
 * @param {?proto.conversationstream.protobuf.SentimentAnalysis|undefined} value
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
*/
proto.conversationstream.protobuf.UserModel.prototype.setSentimentAnalysis = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conversationstream.protobuf.UserModel} returns this
 */
proto.conversationstream.protobuf.UserModel.prototype.clearSentimentAnalysis = function() {
  return this.setSentimentAnalysis(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conversationstream.protobuf.UserModel.prototype.hasSentimentAnalysis = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.conversationstream.protobuf.ConversationStreamMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conversationstream.protobuf.ConversationStreamMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.ConversationStreamMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    content: (f = msg.getContent()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    dateTime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sessionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    subscriberId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    applicationName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    messageType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    source: jspb.Message.getFieldWithDefault(msg, 8, ""),
    destination: jspb.Message.getFieldWithDefault(msg, 9, ""),
    docSource: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conversationstream.protobuf.ConversationStreamMessage;
  return proto.conversationstream.protobuf.ConversationStreamMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conversationstream.protobuf.ConversationStreamMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriberId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationName(value);
      break;
    case 7:
      var value = /** @type {!proto.conversationstream.protobuf.ComponentType} */ (reader.readEnum());
      msg.setMessageType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conversationstream.protobuf.ConversationStreamMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conversationstream.protobuf.ConversationStreamMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conversationstream.protobuf.ConversationStreamMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getDateTime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSubscriberId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getApplicationName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMessageType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDocSource();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Any content = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getContent = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
*/
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.hasContent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string date_time = 3;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getDateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setDateTime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string session_id = 4;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string subscriber_id = 5;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getSubscriberId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setSubscriberId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string application_name = 6;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getApplicationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setApplicationName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ComponentType message_type = 7;
 * @return {!proto.conversationstream.protobuf.ComponentType}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getMessageType = function() {
  return /** @type {!proto.conversationstream.protobuf.ComponentType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.conversationstream.protobuf.ComponentType} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setMessageType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string source = 8;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string destination = 9;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setDestination = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string doc_source = 10;
 * @return {string}
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.getDocSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.conversationstream.protobuf.ConversationStreamMessage} returns this
 */
proto.conversationstream.protobuf.ConversationStreamMessage.prototype.setDocSource = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * @enum {number}
 */
proto.conversationstream.protobuf.ComponentType = {
  COMPONENT: 0,
  LLM_AGENT: 1,
  API: 2
};

goog.object.extend(exports, proto.conversationstream.protobuf);
