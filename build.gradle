buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "java"
    id "com.google.protobuf" version "0.9.4"
    id "io.netifi.flatbuffers" version "1.0.7"
}

group = "sco3"
version = "1.0.0-SNAPSHOT"

compileJava {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

repositories {
    flatDir {
        dirs "lib"
    }
    mavenCentral()
}

dependencies {
    testImplementation "junit:junit:4.13.2"
    implementation "com.google.protobuf:protobuf-java:4.27.0"
	implementation 'com.google.flatbuffers:flatbuffers-java:23.5.26'
}

protobuf {
    plugins {
        js {
            path = getPluginPath('js')
        }
    }
    generateProtoTasks {
        all().configureEach { task ->
            task.builtins {
                python {}
            }
            task.plugins {
                js {
                    option "import_style=commonjs"
                    option "binary"
                    outputSubDir "../../../../../src/main/js/"
                }
            }
        }
    }
}

static def getPluginPath(name) {
    def path = "which protoc-gen-${name}".execute()
    path.waitFor()
    path = path.in.text.trim()
    return path
}

task run(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    mainClass = "sco3.TestPb"
}

task runProtobufjsGen (type:Exec){
     workingDir "${rootDir}"
     commandLine 'pbjs', '-t', 'static-module', '-o', 'src/main/js/pbjs/test_pbjs.js', 'src/main/proto/test.proto'
}

task flatc(type: Exec) {
    def flatc = "flatc"
    def inputDir = file('src/main/flatbuffers')
    def outputDir = file("${buildDir}/generated/source/proto/main/java")

    inputs.dir inputDir
    outputs.dir outputDir

    doFirst {
        outputDir.mkdirs()
    }

    commandLine flatc, '-o', outputDir, '--java', "${inputDir}/test.fbs"
}

task flatcpy(type: Exec) {
    def flatc = "flatc"
    def inputDir = file('src/main/flatbuffers')
    def outputDir = file("src/main/python")

    inputs.dir inputDir
    outputs.dir outputDir

    doFirst {
        outputDir.mkdirs()
    }

    commandLine flatc, '-o', outputDir, '--python', "${inputDir}/test.fbs"
}
